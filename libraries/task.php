<?php/** * Created by PhpStorm. * User: soulevil <<== who is this man? Did he want some beer ? * Date: 8/11/17 * Time: 8:31 PM */class Vr360Task{	/**	 *	 */	public static function login()	{		$authorise = Vr360Authorise::getInstance();		$authorise->signIn();	}	public static function unpublished()	{		$auth = Vr360Authorise::getInstance();		if (!$auth->isAuth())		{			echo '{"error": "notAuth"}';			die();		}		$db = Vr360Database::getInstance();		$result = $db->change_vtour_status($_GET['UIDx'], VR360_TOUR_STATUS_UNPUBLISHED);		header('Content-Type: application/json');		echo (json_encode(array(			'status' => ($result !== false) ? true : false		)));		exit();	}	public static function createTour()	{		if (!Vr360Authorise::isLogged())		{			$ajax = new Vr360AjaxResponse();			$ajax->setMessage('User is not logged')->fail()->respond();		}		$step = $_POST['step'];		$ajax = new Vr360AjaxResponse();		switch ($step)		{			case 'upload':				$uId = uniqid('__', false);				$uId .= '_'.md5(uniqid('', true));				$jsonData = json_decode(json_encode($_POST), true); // We need to get things we need and validate it before use!				$jsonData['files'] = [];				mkdir('_/'.$uId);				$numberofFiles = count($_FILES['file']['name']);				for($i=0; $i < $numberofFiles; $i++)				{					// File upload and validate					//!!!!! need to check file size!! if not krpano will hang 4ever!					if(!Vr360HelperTour::fileValidate($_FILES['file']['tmp_name'][$i]))					{						$ajax->setMessage('Invalid file: '.$_FILES['file']['name'][$i]);						$ajax->fail()->respond();					}					$newFileName = Vr360HelperTour::giveNewImageFileName($_FILES['file']['name'][$i]); //upload with same file name is awfull					if(!move_uploaded_file($_FILES['file']['tmp_name'][$i], '_/'.$uId.'/'.$newFileName))					{						$ajax->setMessage("Cant move upload file: ".$_FILES['file']['name'][$i]);						$ajax->fail()->respond();					}					$jsonData['files'][] = $newFileName;				}				//**************************************************************				//we need to create here! cause multi post is not a good option.				//additionaly, do you want to post files doulbe times?				//if we plan to spearate this, we need a plan to change the js				//**************************************************************				//1 save to json					$jsonFile = "_/$uId/data.json";					if(!file_put_contents($jsonFile, json_encode($jsonData)))					{						$ajax->setMessage("Cant create JSON file")->fail()->respond();					}				//2 save to db //Validate input?						Vr360Database::getInstance()->insert_vtour([							'created_by' => Vr360Authorise::getInstance()->getUser()->id,							'name'       => $_POST['name'],							'dir'        => $uId,							'alias'      => $_POST['alias'], //alias must be uniq							'created'    => date('Y-m-d H:i:s'),							'status'     => 0						]);				//3 reponse				$ajax->setData('uId', $uId)->setMessage('Upload done');				$ajax->success()->respond();				break;			case 'generate': //It is insecurity if generate only by req uID! TOKEN?				$uId = $_POST['uId'];				$jsonFile = "_/$uId/data.json";				$jsonData = json_decode(file_get_contents($jsonFile), true); //check if cant read file OR cant read json format?				//Using krpano tool to cut images				Vr360HelperTour::tourCreate($uId, $jsonData);				//Create xml for tour				Vr360HelperTour::xmlCreate($uId, $jsonData);				//reponse if success				$ajax->setData('uId', $_POST['uId'])->setMessage('Done');				$ajax->success()->respond();				break;			case 'data-update-only':				//this use when you only need to rebuild xml only				//like when you edit the hotspots/sences data only        /*				$uId = $_POST['uId'];				$jsonFile = "_/$uId/data.json";				$jsonOldData = json_decode(file_get_contents($jsonFile), true); //check if cant read file OR cant read json format?				//update db; allow update only some field						Vr360Database::getInstance()->insert_vtour([							'name'       => $_POST['name'],							'alias'      => $_POST['alias'], //alias must be uniq						]);				//update json file					//bla bla bla bla				//update xml file					Vr360HelperTour::xmlCreate($uId, $jsonData);				*/				break;			default:			 //??????			 $ajax->setMessage('Unknow step!')->fail()->respond();			 break;		}	}}